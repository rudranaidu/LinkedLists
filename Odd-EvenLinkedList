Odd-Even Linked List Problem
You are given the head of a singly linked list. Rearrange the list to group all nodes at odd indices together, followed by the nodes at even indices, while preserving their relative order in the input.

Example Input and Output:
Input: 1 -> 2 -> 3 -> 4 -> 5 -> 6 -> null
Output: 1 -> 3 -> 5 -> 2 -> 4 -> 6 -> null

Input: 2 -> 1 -> 3 -> 5 -> 6 -> 4 -> 7 -> null
Output: 2 -> 3 -> 6 -> 7 -> 1 -> 5 -> 4 -> null

class ListNode {
    int val;
    ListNode next;

    ListNode(int val) {
        this.val = val;
        this.next = null;
    }
}

public class OddEvenLinkedList {
    public static ListNode oddEvenList(ListNode head) {
        if (head == null) {
            return null;
        }

        // Dummy heads for odd and even lists
        ListNode oddDummy = new ListNode(0);
        ListNode evenDummy = new ListNode(0);

        ListNode oddTail = oddDummy;
        ListNode evenTail = evenDummy;

        ListNode current = head;
        int index = 1; // Start from index 1

        while (current != null) {
            if (index % 2 == 1) {
                oddTail.next = current;
                oddTail = oddTail.next;
            } else {
                evenTail.next = current;
                evenTail = evenTail.next;
            }
            current = current.next;
            index++;
        }

        // Terminate the even list
        evenTail.next = null;

        // Link the odd list to the even list
        oddTail.next = evenDummy.next;

        return oddDummy.next;
    }

    public static void printList(ListNode head) {
        while (head != null) {
            System.out.print(head.val + " -> ");
            head = head.next;
        }
        System.out.println("null");
    }

    public static void main(String[] args) {
        // Example: 1 -> 2 -> 3 -> 4 -> 5 -> 6 -> null
        ListNode head = new ListNode(1);
        head.next = new ListNode(2);
        head.next.next = new ListNode(3);
        head.next.next.next = new ListNode(4);
        head.next.next.next.next = new ListNode(5);
        head.next.next.next.next.next = new ListNode(6);

        System.out.println("Original List:");
        printList(head);

        System.out.println("Rearranged List:");
        ListNode result = oddEvenList(head);
        printList(result);
    }
}
