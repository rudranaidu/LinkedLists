
Calculate Length of List
Identify Position to Delete
Handle Head Node Deletion
traverse to the Node Before the Target
Update Links to Remove Target Node
Return the Modified List

public ListNode removeNthFromEnd(ListNode head, int n) {
    if (head == null || n <= 0) {
        return head; // Edge case: Invalid input
    }

    int len = getLength(head); // Get the length of the list
    int indexToDelete = len - n; // Position to delete from the start

    // If the head needs to be deleted
    if (indexToDelete == 0) {
        return head.next;
    }

    // Traverse to the node before the one to delete
    ListNode current = head;
    for (int i = 1; i < indexToDelete; i++) { // Traverse indexToDelete - 1 times
        current = current.next;
    }

    // Delete the nth node from the end
    current.next = current.next.next;

    return head;
}

private int getLength(ListNode head) {
    int length = 0;
    ListNode current = head;
    while (current != null) {
        length++;
        current = current.next;
    }
    return length;
}
